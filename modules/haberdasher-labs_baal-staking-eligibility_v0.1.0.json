{
  "id": "haberdasher-labs_baal-staking-eligibility",
  "version": "v0.1.0",
  "name": "Baal Staking Eligibility",
  "details": [
    "An eligibility module which requires wearers of a given hat to stake a minimum amount of Baal voting shares in order to be eligible, and enables others in the Hat tree's organization to slash the stake of a wearer who is behaving badly."
  ],
  "links": [
    {
      "label": "GitHub",
      "link": "https://github.com/Hats-Protocol/hats-baal-shamans/blob/v0.1.0-staking/src/HatsStakingShaman.sol"
    }
  ],
  "parameters": [
    {
      "label": "Baal Contract",
      "functionName": "BAAL",
      "displayType": "address"
    },
    {
      "label": "Staking Token",
      "functionName": "SHARES_TOKEN",
      "displayType": "erc20"
    },
    {
      "label": "Minimum Stake",
      "functionName": "minStake",
      "displayType": "default"
    },
    {
      "label": "Cooldown Period",
      "functionName": "cooldownPeriod",
      "displayType": "seconds"
    },
    {
      "label": "Judge Hat (Can Set Wearer Standing)",
      "functionName": "judge",
      "displayType": "hat"
    }
  ],
  "type": {
    "eligibility": true,
    "toggle": false,
    "hatter": false
  },
  "tags": [],
  "implementationAddress": "0xa1E79f78630F77436C001Af44893A2720180E19F",
  "deployments": [
    {
      "chainId": "11155111",
      "block": "6007514"
    },
    {
      "chainId": "10",
      "block": "120717655"
    }
  ],
  "creationArgs": {
    "useHatId": true,
    "immutable": [
      {
        "name": "Baal",
        "description": "The Baal contract whose voting shares will be used for staking",
        "type": "address",
        "example": "0xcf4b2e60273da3718fd16ee0d4cb176247ecc28a",
        "displayType": "address"
      },
      {
        "name": "Staking Proxy Implementation",
        "description": "The address of the staking proxy implementation. This enables staked votes to be delegated back to the staker or a delegate of their choice.",
        "type": "address",
        "example": "0x23da8C14c1F40049A5A26Fa41610003b181A4377",
        "displayType": "address"
      }
    ],
    "mutable": [
      {
        "name": "Cooldown Buffer",
        "description": "The number of seconds that must elapse between beginning an unstake and completing it, in addition to the Baal's voting period and grace period",
        "type": "uint32",
        "example": 86400,
        "displayType": "seconds"
      },
      {
        "name": "Judge Hat",
        "description": "The hat that can set wearers' standing, enabling them to be slashed",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      },
      {
        "name": "Minimum Stake",
        "description": "The minimum stake required to be eligible for the hat",
        "type": "uint112",
        "example": "100",
        "displayType": "amountWithDecimals"
      }
    ]
  },
  "customRoles": [
    {
      "id": "baalStakingJudge",
      "name": "Staking Judge",
      "criteria": "judge"
    }
  ],
  "writeFunctions": [
    {
      "roles": ["public"],
      "functionName": "stakeAndClaim",
      "label": "Stake and Claim",
      "description": "Stake tokens for the first time and claim the hat",
      "primary": true,
      "args": [
        {
          "name": "Amount",
          "description": "The amount of tokens to stake",
          "type": "uint112",
          "displayType": "amountWithDecimals"
        },
        {
          "name": "Delegate",
          "description": "The address to delegate staked votes to",
          "type": "address",
          "displayType": "default"
        },
        {
          "name": "Claims Hatter",
          "description": "A Multi Claims Hatter instance with which to perform claiming",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "stake",
      "label": "Stake",
      "description": "Stake tokens, whether for the first time or to increase an existing stake.",
      "primary": false,
      "args": [
        {
          "name": "Amount",
          "description": "The amount of tokens to stake",
          "type": "uint112",
          "displayType": "amountWithDecimals"
        },
        {
          "name": "Delegate",
          "description": "The address to delegate staked votes to",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "beginUnstake",
      "label": "Begin Unstake",
      "description": "Begin the process of unstaking an amount tokens by initiating a cooldown period, after which the tokens can be unstaked if the staker is not slashed in the meantime.",
      "args": [
        {
          "name": "Amount",
          "description": "The amount of tokens to unstake",
          "type": "uint112",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "resetUnstake",
      "label": "Reset Unstake",
      "description": "Reset the unstake process with a new amount to unstake.",
      "args": [
        {
          "name": "New Unstaking Amount",
          "description": "The new amount of tokens to unstake",
          "type": "uint112",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "completeUnstake",
      "label": "Complete Unstake For Account",
      "description": "Complete the process of unstaking for a staker after the cooldown period has elapsed.",
      "args": [
        {
          "name": "Staker",
          "description": "The staker for whom to complete unstaking",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "unstakeFromDeregisteredRole",
      "label": "Unstake From Deregistered Hat",
      "description": "Unstake tokens from a hat that no longer requires staking",
      "primary": false,
      "args": []
    },
    {
      "roles": ["public"],
      "functionName": "delegate",
      "label": "Delegate Votes",
      "description": "Delegate staked votes to a new delegate",
      "primary": false,
      "args": [
        {
          "name": "New Delegate",
          "description": "The address to delegate staked votes to",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "setMinStake",
      "label": "Change Min Stake",
      "description": "Change the minimum stake required to be eligible for the hat",
      "primary": true,
      "args": [
        {
          "name": "Min Stake",
          "description": "The new minimum stake",
          "type": "uint112",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "setJudge",
      "label": "Change Judge Hat",
      "description": "Change the hat that can slash wearers",
      "args": [
        {
          "name": "Hat",
          "description": "The new judge hat",
          "type": "uint256",
          "displayType": "hat"
        }
      ]
    },
    {
      "roles": ["baalStakingJudge"],
      "functionName": "setStanding",
      "label": "Set Wearer Standing",
      "description": "Set a wearer's standing",
      "primary": true,
      "args": [
        {
          "name": "Wearer",
          "description": "The wearer to set the standing of",
          "type": "address",
          "displayType": "default"
        },
        {
          "name": "Standing",
          "description": "The new standing of the wearer",
          "type": "bool",
          "displayType": "default"
        }
      ]
    }
  ],
  "abi": [
    {
      "inputs": [
        { "internalType": "string", "name": "_version", "type": "string" }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    { "inputs": [], "name": "CooldownNotEnded", "type": "error" },
    { "inputs": [], "name": "HatImmutable", "type": "error" },
    { "inputs": [], "name": "InsufficientStake", "type": "error" },
    { "inputs": [], "name": "NotAdmin", "type": "error" },
    { "inputs": [], "name": "NotInBadStanding", "type": "error" },
    { "inputs": [], "name": "NotJudge", "type": "error" },
    { "inputs": [], "name": "NotShaman", "type": "error" },
    { "inputs": [], "name": "RoleStillRegistered", "type": "error" },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "judge",
          "type": "uint256"
        }
      ],
      "name": "JudgeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "minStake",
          "type": "uint112"
        }
      ],
      "name": "MinStakeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "amount",
          "type": "uint112"
        }
      ],
      "name": "Slashed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "amount",
          "type": "uint112"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "amount",
          "type": "uint112"
        }
      ],
      "name": "UnstakeBegun",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "amount",
          "type": "uint112"
        }
      ],
      "name": "UnstakeCompleted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BAAL",
      "outputs": [
        { "internalType": "contract IBaal", "name": "", "type": "address" }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HATS",
      "outputs": [
        { "internalType": "contract IHats", "name": "", "type": "address" }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPLEMENTATION",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SHARES_TOKEN",
      "outputs": [
        { "internalType": "contract IBaalToken", "name": "", "type": "address" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_PROXY_IMPL",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint112", "name": "_amount", "type": "uint112" }
      ],
      "name": "beginUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MultiClaimsHatter",
          "name": "_claimsHatter",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" }
      ],
      "name": "completeUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooldownBuffer",
      "outputs": [{ "internalType": "uint32", "name": "", "type": "uint32" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooldownPeriod",
      "outputs": [{ "internalType": "uint32", "name": "", "type": "uint32" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_newDelegate", "type": "address" }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" }
      ],
      "name": "getStakedSharesAndProxy",
      "outputs": [
        { "internalType": "uint112", "name": "amount", "type": "uint112" },
        { "internalType": "address", "name": "stakingProxy", "type": "address" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" },
        { "internalType": "uint256", "name": "", "type": "uint256" }
      ],
      "name": "getWearerStatus",
      "outputs": [
        { "internalType": "bool", "name": "eligible", "type": "bool" },
        { "internalType": "bool", "name": "standing", "type": "bool" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hatId",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isManagerShaman",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "judge",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" }
      ],
      "name": "memberStakes",
      "outputs": [
        { "internalType": "uint112", "name": "totalStaked", "type": "uint112" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minStake",
      "outputs": [{ "internalType": "uint112", "name": "", "type": "uint112" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint112",
          "name": "_newUnstakingAmount",
          "type": "uint112"
        }
      ],
      "name": "resetUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "_judge", "type": "uint256" }
      ],
      "name": "setJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint112", "name": "_minStake", "type": "uint112" }
      ],
      "name": "setMinStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" },
        { "internalType": "bool", "name": "_standing", "type": "bool" }
      ],
      "name": "setStanding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes", "name": "_initData", "type": "bytes" }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_member", "type": "address" }
      ],
      "name": "slash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint112", "name": "_amount", "type": "uint112" },
        { "internalType": "address", "name": "_delegate", "type": "address" }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint112", "name": "_amount", "type": "uint112" },
        { "internalType": "address", "name": "_delegate", "type": "address" },
        {
          "internalType": "contract MultiClaimsHatter",
          "name": "_claimsHatter",
          "type": "address"
        }
      ],
      "name": "stakeAndClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "member", "type": "address" }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "stakedAmount",
          "type": "uint112"
        },
        {
          "internalType": "uint112",
          "name": "unstakingAmount",
          "type": "uint112"
        },
        {
          "internalType": "uint32",
          "name": "canUnstakeAfter",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakeFromDeregisteredRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version_",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    }
  ]
}

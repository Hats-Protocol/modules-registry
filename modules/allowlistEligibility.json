{
  "name": "Allowlist Eligibility",
  "details": [
    "A Hats Protocol eligibility module that uses an allowlist to determine eligibility.",
    "This module sets up a simple allowlist to determine eligibility for a hat. For a given account (i.e., potential hat wearer), the allowlist stores that account's eligibility and standing for the hat. The wearer(s) of the Owner Hat can add or remove accounts from the allowlist. The wearer(s) of the Arbitrator Hat can set the standing of accounts."
  ],
  "links": [
    {
      "label": "GitHub",
      "link": "https://github.com/Hats-Protocol/allowlist-eligibility"
    }
  ],
  "parameters": [
    {
      "label": "Owner Hat",
      "functionName": "ownerHat",
      "displayType": "hat"
    },
    {
      "label": "Arbitrator Hat",
      "functionName": "arbitratorHat",
      "displayType": "hat"
    }
  ],
  "type": {
    "eligibility": true,
    "toggle": false,
    "hatter": false
  },
  "tags": [],
  "implementationAddress": "TBD",
  "deployments": [
    {
      "chainId": "5",
      "block": "TBD"
    },
    {
      "chainId": "11155111",
      "block": "TBD"
    },
    {
      "chainId": "10",
      "block": "TBD"
    },
    {
      "chainId": "137",
      "block": "TBD"
    },
    {
      "chainId": "42161",
      "block": "TBD"
    },
    {
      "chainId": "100",
      "block": "TBD"
    },
    {
      "chainId": "42220",
      "block": "TBD"
    },
    {
      "chainId": "8453",
      "block": "TBD"
    }
  ],
  "creationArgs": {
    "useHatId": true,
    "immutable": [],
    "mutable": [
      {
        "name": "Owner Hat",
        "description": "The hat ID for the owner hat. The wearer(s) of this hat are authorized to add and remove accounts from the allowlist.",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      },
      {
        "name": "Arbitrator Hat",
        "description": "The hat ID for the arbitrator hat. The wearer(s) of this hat are authorized to set the standing for accounts.",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      },
      {
        "name": "Accounts",
        "description": "Initial accounts for the allowlist.",
        "type": "address[]",
        "example": [
          "0x0000000000000000000000000000000000000001",
          "0x0000000000000000000000000000000000000002"
        ],
        "displayType": "default"
      }
    ]
  },
  "customRoles": [
    {
      "id": "allowListOwner",
      "name": "Allowlist Owner",
      "criteria": "OWNER_HAT"
    },
    {
      "id": "allowListArbitrator",
      "name": "Allowlist Arbitrator",
      "criteria": "ARBITRATOR_HAT"
    }
  ],
  "writeFunctions": [
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "addAccount",
      "label": "Add Account",
      "description": "Add an account to the allowlist",
      "primary": true,
      "args": [
        {
          "name": "Account",
          "description": "The account to add",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "addAccounts",
      "label": "Add Accounts",
      "description": "Add multiple accounts to the allowlist",
      "args": [
        {
          "name": "Accounts",
          "description": "The accounts to add",
          "type": "address[]",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "removeAccount",
      "label": "Remove Account",
      "description": "Remove an account from the allowlist",
      "args": [
        {
          "name": "Account",
          "description": "The account to remove",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "removeAccountAndBurnHat",
      "label": "Remove and Burn",
      "description": "Remove an account from the allowlist and burn their hat",
      "args": [
        {
          "name": "Account",
          "description": "The account to remove",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "removeAccounts",
      "label": "Remove Accounts",
      "description": "Remove multiple accounts from the allowlist",
      "args": [
        {
          "name": "Accounts",
          "description": "Accounts to remove",
          "type": "address[]",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListArbitrator"
      ],
      "functionName": "setStandingForAccount",
      "label": "Set Standing",
      "description": "Set the standing for an account",
      "primary": true,
      "args": [
        {
          "name": "Account",
          "description": "The account to set standing for",
          "type": "address",
          "displayType": "default"
        },
        {
          "name": "Standing",
          "description": "The standing to set",
          "type": "bool",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListArbitrator"
      ],
      "functionName": "setBadStandingAndBurnHat",
      "label": "Set Bad Standing and Burn Hat",
      "description": "Puts an account in bad standing and burns their hat",
      "args": [
        {
          "name": "Account",
          "description": "The account to set standing for",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListArbitrator"
      ],
      "functionName": "setStandingForAccounts",
      "label": "Set Standings",
      "description": "Set the standing for multiple accounts",
      "args": [
        {
          "name": "Accounts",
          "description": "Accounts accounts to set standing for",
          "type": "address[]",
          "displayType": "default"
        },
        {
          "name": "Standings",
          "description": "The standings to set for each account, corresponding to the accounts order",
          "type": "bool[]",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "setOwnerHat",
      "label": "Set Allowlist Owner Hat",
      "description": "Set the id of the allowlist owner hat",
      "args": [
        {
          "name": "New Allowlist Owner Hat",
          "description": "The id of the new allowlist owner hat",
          "type": "uint256",
          "displayType": "hat"
        }
      ]
    },
    {
      "roles": [
        "allowListOwner"
      ],
      "functionName": "setArbitratorHat",
      "label": "Set Allowlist Arbitrator Hat",
      "description": "Set the id of the allowlist arbitrator hat",
      "args": [
        {
          "name": "New Allowlist Arbitrator Hat",
          "description": "The id of the new allowlist arbitrator hat",
          "type": "uint256",
          "displayType": "hat"
        }
      ]
    }
  ],
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_version",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "HATS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IHats"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "IMPLEMENTATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "_setArbitratorHat",
      "inputs": [
        {
          "name": "_newArbitratorHat",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "_setOwnerHat",
      "inputs": [
        {
          "name": "_newOwnerHat",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addAccount",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addAccounts",
      "inputs": [
        {
          "name": "_accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowlist",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "eligible",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "badStanding",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "arbitratorHat",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWearerStatus",
      "inputs": [
        {
          "name": "_wearer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_eligible",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "_standing",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hatId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "ownerHat",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeAccount",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeAccountAndBurnHat",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeAccounts",
      "inputs": [
        {
          "name": "_accounts",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setArbitratorHat",
      "inputs": [
        {
          "name": "_newArbitratorHat",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setBadStandingAndBurnHat",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOwnerHat",
      "inputs": [
        {
          "name": "_newOwnerHat",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStandingForAccount",
      "inputs": [
        {
          "name": "_account",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_standing",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStandingForAccounts",
      "inputs": [
        {
          "name": "_accounts",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_standing",
          "type": "bool[]",
          "internalType": "bool[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setUp",
      "inputs": [
        {
          "name": "_initData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version_",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AccountAdded",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AccountRemoved",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AccountStandingChanged",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "standing",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AccountsAdded",
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AccountsRemoved",
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AccountsStandingChanged",
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]",
          "indexed": false,
          "internalType": "address[]"
        },
        {
          "name": "standing",
          "type": "bool[]",
          "indexed": false,
          "internalType": "bool[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ArbitratorHatSet",
      "inputs": [
        {
          "name": "newArbitratorHat",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnerHatSet",
      "inputs": [
        {
          "name": "newOwnerHat",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AllowlistEligibility_ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AllowlistEligibility_HatNotMutable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AllowlistEligibility_NotArbitrator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AllowlistEligibility_NotOwner",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AllowlistEligibility_NotWearer",
      "inputs": []
    }
  ]
}
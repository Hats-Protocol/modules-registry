{
  "name": "Allowlist Eligibility",
  "details": [
    "A Hats Protocol eligibility module that uses an allowlist to determine eligibility.",
    "This module sets up a simple allowlist to determine eligibility for a hat. For a given account (i.e., potential hat wearer), the allowlist stores values for that account's eligibility and standing for the hat. The wearer(s) of the Owner Hat can add or remove accounts from the allowlist. The wearer(s) of the Arbitrator Hat can set the standing of accounts."
  ],
  "links": [
    {
      "label": "GitHub",
      "link": "https://github.com/Hats-Protocol/allowlist-eligibility"
    }
  ],
  "parameters": [
    {
      "label": "Owner Hat",
      "functionName": "OWNER_HAT",
      "displayType": "hat"
    },
    {
      "label": "Arbitrator Hat",
      "functionName": "ARBITRATOR_HAT",
      "displayType": "hat"
    }
  ],
  "type": {
    "eligibility": true,
    "toggle": false,
    "hatter": false
  },
  "implementationAddress": "0xaC208e6668DE569C6ea1db76DeCea70430335Ed5",
  "deployments": [
    {
      "chainId": "5",
      "block": "9647259"
    },
    {
      "chainId": "11155111",
      "block": "4655298"
    },
    {
      "chainId": "10",
      "block": "109815832"
    },
    {
      "chainId": "137",
      "block": "48560643"
    },
    {
      "chainId": "42161",
      "block": "139432841"
    },
    {
      "chainId": "100",
      "block": "30405602"
    }
  ],
  "creationArgs": {
    "useHatId": true,
    "immutable": [
      {
        "name": "Owner Hat",
        "description": "The hat ID for the owner hat. The wearer(s) of this hat are authorized to add and remove accounts from the allowlist.",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      },
      {
        "name": "Arbitrator Hat",
        "description": "The hat ID for the arbitrator hat. The wearer(s) of this hat are authorized to set the standing for accounts.",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      }
    ],
    "mutable": [
      {
        "name": "Accounts",
        "description": "Initial acoount for the allowlist.",
        "type": "address[]",
        "example": [
          "0x0000000000000000000000000000000000000001",
          "0x0000000000000000000000000000000000000002"
        ],
        "displayType": "default"
      }
    ]
  },
  "customRoles": [
    {
      "id": "allowListOwner",
      "name": "Allow-List Owner",
      "criteria": "OWNER_HAT"
    },
    {
      "id": "allowListArbitrator",
      "name": "Allow-List Arbitrator",
      "criteria": "ARBITRATOR_HAT"
    }
  ],
  "writeFunctions": [
    {
      "roles": ["allowListOwner"],
      "functionName": "addAccount",
      "label": "Add Account",
      "description": "Add an account to the allow-list",
      "primary": true,
      "args": [
        {
          "name": "Account",
          "description": "The account to add",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListOwner"],
      "functionName": "addAccounts",
      "label": "Add Accounts",
      "description": "Add multiple accounts to the allow-list",
      "args": [
        {
          "name": "Accounts",
          "description": "The accounts to add",
          "type": "address[]",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListOwner"],
      "functionName": "removeAccount",
      "label": "Remove Account",
      "description": "Remove an account from the allow-list",
      "args": [
        {
          "name": "Account",
          "description": "The account to remove",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListOwner"],
      "functionName": "removeAccountAndBurnHat",
      "label": "Remove and Burn",
      "description": "Remove an account from the allow-list and burn their hat",
      "args": [
        {
          "name": "Account",
          "description": "The account to remove",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListOwner"],
      "functionName": "removeAccounts",
      "label": "Remove Accounts",
      "description": "Remove multiple accounts from the allow-list",
      "args": [
        {
          "name": "Accounts",
          "description": "Accounts to remove",
          "type": "address[]",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListArbitrator"],
      "functionName": "setStandingForAccount",
      "label": "Set Standing",
      "description": "Set the standing for an account",
      "primary": true,
      "args": [
        {
          "name": "Account",
          "description": "The account to set standing for",
          "type": "address",
          "displayType": "default"
        },
        {
          "name": "Standing",
          "description": "The standing to set",
          "type": "bool",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListArbitrator"],
      "functionName": "setBadStandingAndBurnHat",
      "label": "Set Bad Standing and Burn Hat",
      "description": "Puts an account in bad standing and burns their hat",
      "args": [
        {
          "name": "Account",
          "description": "The account to set standing for",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["allowListArbitrator"],
      "functionName": "setStandingForAccounts",
      "label": "Set Standings",
      "description": "Set the standing for multiple accounts",
      "args": [
        {
          "name": "Accounts",
          "description": "Accounts accounts to set standing for",
          "type": "address[]",
          "displayType": "default"
        },
        {
          "name": "Standings",
          "description": "The standings to set for each account, corresponding to the accounts order",
          "type": "bool[]",
          "displayType": "default"
        }
      ]
    }
  ],
  "abi": [
    {
      "inputs": [
        { "internalType": "string", "name": "_version", "type": "string" }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AllowlistEligibility_ArrayLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowlistEligibility_NotArbitrator",
      "type": "error"
    },
    { "inputs": [], "name": "AllowlistEligibility_NotOwner", "type": "error" },
    { "inputs": [], "name": "AllowlistEligibility_NotWearer", "type": "error" },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AccountAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AccountRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "standing",
          "type": "bool"
        }
      ],
      "name": "AccountStandingChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "AccountsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "AccountsRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "standing",
          "type": "bool[]"
        }
      ],
      "name": "AccountsStandingChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ARBITRATOR_HAT",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HATS",
      "outputs": [
        { "internalType": "contract IHats", "name": "", "type": "address" }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPLEMENTATION",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OWNER_HAT",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_account", "type": "address" }
      ],
      "name": "addAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "addAccounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "account", "type": "address" }
      ],
      "name": "allowlist",
      "outputs": [
        { "internalType": "bool", "name": "eligible", "type": "bool" },
        { "internalType": "bool", "name": "badStanding", "type": "bool" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_wearer", "type": "address" },
        { "internalType": "uint256", "name": "", "type": "uint256" }
      ],
      "name": "getWearerStatus",
      "outputs": [
        { "internalType": "bool", "name": "_eligible", "type": "bool" },
        { "internalType": "bool", "name": "_standing", "type": "bool" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hatId",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_account", "type": "address" }
      ],
      "name": "removeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_account", "type": "address" }
      ],
      "name": "removeAccountAndBurnHat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "removeAccounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_account", "type": "address" }
      ],
      "name": "setBadStandingAndBurnHat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_account", "type": "address" },
        { "internalType": "bool", "name": "_standing", "type": "bool" }
      ],
      "name": "setStandingForAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        },
        { "internalType": "bool[]", "name": "_standing", "type": "bool[]" }
      ],
      "name": "setStandingForAccounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes", "name": "_initData", "type": "bytes" }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version_",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    }
  ]
}

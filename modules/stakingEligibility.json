{
  "name": "Staking Eligibility",
  "details": [
    "A Hats Protocol eligibility module which requires wearers of a given hat to stake a minimum amount of a specified token in order to be eligible, and enables others in the Hat tree's organization to slash the stake of a wearer who is behaving badly."
  ],
  "links": [
    {
      "label": "GitHub",
      "link": "https://github.com/Hats-Protocol/staking-eligibility"
    }
  ],
  "parameters": [
    {
      "label": "Staking Token",
      "functionName": "TOKEN",
      "displayType": "erc20"
    },
    {
      "label": "Minimum Stake",
      "functionName": "minStake",
      "displayType": "amountWithDecimals"
    },
    {
      "label": "Judge Hat (Can Slash Wearers)",
      "functionName": "judgeHat",
      "displayType": "hat"
    },
    {
      "label": "Recipient Hat (Can Withdraw Slashed Stakes)",
      "functionName": "recipientHat",
      "displayType": "hat"
    }
  ],
  "type": {
    "eligibility": true,
    "toggle": false,
    "hatter": false
  },
  "implementationAddress": "0x9E01030aF633Be5a439DF122F2eEf750b44B8aC7",
  "deployments": [
    {
      "chainId": "5",
      "block": "9597271"
    },
    {
      "chainId": "11155111",
      "block": "4655531"
    },
    {
      "chainId": "10",
      "block": "110684134"
    },
    {
      "chainId": "137",
      "block": "48562856"
    },
    {
      "chainId": "42161",
      "block": "139450291"
    },
    {
      "chainId": "100",
      "block": "30406165"
    }
  ],
  "creationArgs": {
    "useHatId": true,
    "immutable": [
      {
        "name": "Staking Token",
        "description": "ERC-20 Token which will be used for staking",
        "type": "address",
        "example": "0x1d256A1154382921067d4B17CA52209f2d3bE106",
        "displayType": "token"
      }
    ],
    "mutable": [
      {
        "name": "Minimum Stake",
        "description": "The minimum stake required to be eligible for the hat",
        "type": "uint256",
        "example": "100",
        "displayType": "amountWithDecimals"
      },
      {
        "name": "Judge Hat",
        "description": "The hat that can slash wearers",
        "type": "uint256",
        "example": "26959946667150639794667015087019630673637144422540572481103610249216",
        "displayType": "hat"
      },
      {
        "name": "Recipient Hat",
        "description": "The hat that can withdraw slashed stakes",
        "type": "uint256",
        "example": "53919893334301279589334030174039261347274288845081144962207220498432",
        "displayType": "hat"
      },
      {
        "name": "Cooldown Period",
        "description": "The number of seconds that must elapse between beginning an unstake and completing it. This should be set long enough to give a wearer of the judge hat enough time to slash a misbehaving staker before they can unstake",
        "type": "uint256",
        "example": "86400",
        "displayType": "seconds"
      }
    ]
  },
  "customRoles": [
    {
      "id": "stakingJudge",
      "name": "Staking Judge",
      "criteria": "judgeHat"
    },
    {
      "id": "stakingRecipient",
      "name": "Staking Recipient",
      "criteria": "recipientHat"
    }
  ],
  "writeFunctions": [
    {
      "roles": ["public"],
      "functionName": "stake",
      "label": "Stake",
      "description": "Stake tokens, whether for the first time or to increase an existing stake.",
      "primary": true,
      "args": [
        {
          "name": "Amount",
          "description": "The amount of tokens to stake",
          "type": "uint248",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "beginUnstake",
      "label": "Begin Unstake",
      "description": "Begin the process of unstaking an amount tokens by initiating a cooldown period, after which the tokens can be unstaked if the skater is not slashed in the meantime.",
      "args": [
        {
          "name": "Amount",
          "description": "The amount of tokens to unstake",
          "type": "uint248",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "completeUnstake",
      "label": "Complete Unstake For Account",
      "description": "Complete the process of unstaking for a staker after the cooldown period has elapsed.",
      "args": [
        {
          "name": "Staker",
          "description": "The staker for which to complete unstaking",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["public"],
      "functionName": "completeUnstake",
      "label": "Complete My Unstake",
      "description": "Complete your unstaking process after the cooldown period has elapsed.",
      "args": []
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "changeMinStake",
      "label": "Change Min Stake",
      "description": "Change the minimum stake required to be eligible for the hat",
      "primary": true,
      "args": [
        {
          "name": "Min Stake",
          "description": "The new minimum stake",
          "type": "uint248",
          "displayType": "amountWithDecimals"
        }
      ]
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "changeJudgeHat",
      "label": "Change Judge Hat",
      "description": "Change the hat that can slash wearers",
      "args": [
        {
          "name": "Hat",
          "description": "The new judge hat",
          "type": "uint256",
          "displayType": "hat"
        }
      ]
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "changeRecipientHat",
      "label": "Change Recipient Hat",
      "description": "Change the hat whose wearer is the recipient of withdrawn slashed stakes",
      "args": [
        {
          "name": "Hat",
          "description": "The new recipient hat",
          "type": "uint256",
          "displayType": "hat"
        }
      ]
    },
    {
      "roles": ["hatAdmins"],
      "functionName": "changeCooldownPeriod",
      "label": "Change Cooldown Hat",
      "description": "Change the number of seconds that must elapse between beginning an unstake and completing it. This period should be long enough that a wearer of the Judge Hat has enough time to slash a misbehaving staker before they can unstake.",
      "args": [
        {
          "name": "Cooldown Period",
          "description": "The new cooldown period",
          "type": "uint256",
          "displayType": "seconds"
        }
      ]
    },
    {
      "roles": ["stakingJudge"],
      "functionName": "slash",
      "label": "Slash",
      "description": "Slash a staker's full stake and set bad standing",
      "primary": true,
      "args": [
        {
          "name": "Staker",
          "description": "The staker to slash",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["stakingJudge"],
      "functionName": "forgive",
      "label": "Forgive",
      "description": "Forgive a slashed address, placing them back in good standing and allowing them to stake again",
      "args": [
        {
          "name": "Staker",
          "description": "The staker to forgive",
          "type": "address",
          "displayType": "default"
        }
      ]
    },
    {
      "roles": ["stakingRecipient"],
      "functionName": "withdraw",
      "label": "Withdraw",
      "description": "Withdraw all slashed stakes to a wearer of the recipient hat",
      "primary": true,
      "args": [
        {
          "name": "Recipient",
          "description": "The recipient of the withdrawn tokens, must wear the recipient hat",
          "type": "address",
          "displayType": "default"
        }
      ]
    }
  ],
  "abi": [
    {
      "inputs": [
        { "internalType": "string", "name": "_version", "type": "string" }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "StakingEligibility_AlreadySlashed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingEligibility_CooldownNotEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingEligibility_HatImmutable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingEligibility_InsufficientStake",
      "type": "error"
    },
    { "inputs": [], "name": "StakingEligibility_NoCooldown", "type": "error" },
    { "inputs": [], "name": "StakingEligibility_NotHatAdmin", "type": "error" },
    { "inputs": [], "name": "StakingEligibility_NotJudge", "type": "error" },
    {
      "inputs": [],
      "name": "StakingEligibility_NotRecipient",
      "type": "error"
    },
    { "inputs": [], "name": "StakingEligibility_NotSlashed", "type": "error" },
    {
      "inputs": [],
      "name": "StakingEligibility_NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingEligibility_TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "StakingEligibility_CooldownPeriodChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "hatId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "instance",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint248",
          "name": "minStake",
          "type": "uint248"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "judgeHat",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "recipientHat",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cooldownPeriod",
          "type": "uint256"
        }
      ],
      "name": "StakingEligibility_Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "StakingEligibility_Forgiven",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newJudgeHat",
          "type": "uint256"
        }
      ],
      "name": "StakingEligibility_JudgeHatChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint248",
          "name": "newMinStake",
          "type": "uint248"
        }
      ],
      "name": "StakingEligibility_MinStakeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRecipientHat",
          "type": "uint256"
        }
      ],
      "name": "StakingEligibility_RecipientHatChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wearer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint248",
          "name": "amount",
          "type": "uint248"
        }
      ],
      "name": "StakingEligibility_Slashed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint248",
          "name": "amount",
          "type": "uint248"
        }
      ],
      "name": "StakingEligibility_Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint248",
          "name": "amount",
          "type": "uint248"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cooldownEnd",
          "type": "uint256"
        }
      ],
      "name": "StakingEligibility_UnstakeBegun",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "HATS",
      "outputs": [
        { "internalType": "contract IHats", "name": "", "type": "address" }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPLEMENTATION",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN",
      "outputs": [
        { "internalType": "contract IERC20", "name": "", "type": "address" }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint248", "name": "_amount", "type": "uint248" }
      ],
      "name": "beginUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cooldownPeriod",
          "type": "uint256"
        }
      ],
      "name": "changeCooldownPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint256", "name": "_judgeHat", "type": "uint256" }
      ],
      "name": "changeJudgeHat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint248", "name": "_minStake", "type": "uint248" }
      ],
      "name": "changeMinStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_recipientHat",
          "type": "uint256"
        }
      ],
      "name": "changeRecipientHat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_staker", "type": "address" }
      ],
      "name": "completeUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completeUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooldownPeriod",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "name": "cooldowns",
      "outputs": [
        { "internalType": "uint248", "name": "amount", "type": "uint248" },
        { "internalType": "uint256", "name": "endsAt", "type": "uint256" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_staker", "type": "address" }
      ],
      "name": "forgive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_wearer", "type": "address" },
        { "internalType": "uint256", "name": "", "type": "uint256" }
      ],
      "name": "getWearerStatus",
      "outputs": [
        { "internalType": "bool", "name": "eligible", "type": "bool" },
        { "internalType": "bool", "name": "standing", "type": "bool" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hatId",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "judgeHat",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minStake",
      "outputs": [{ "internalType": "uint248", "name": "", "type": "uint248" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipientHat",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "bytes", "name": "_initData", "type": "bytes" }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_staker", "type": "address" }
      ],
      "name": "slash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "uint248", "name": "_amount", "type": "uint248" }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "name": "stakes",
      "outputs": [
        { "internalType": "uint248", "name": "amount", "type": "uint248" },
        { "internalType": "bool", "name": "slashed", "type": "bool" }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSlashedStakes",
      "outputs": [{ "internalType": "uint248", "name": "", "type": "uint248" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version_",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        { "internalType": "address", "name": "_recipient", "type": "address" }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]
}
